-- generated by pyha 0.0.7
library ieee;
    use ieee.std_logic_1164.all;
    use ieee.numeric_std.all;
    use ieee.fixed_float_types.all;
    use ieee.fixed_pkg.all;
    use ieee.math_real.all;

library work;
    use work.PyhaUtil.all;
    use work.Typedefs.all;
    use work.all;
    use work.Complex_0.all;


package FIR_2 is
    type next_t is record
        DELAY: integer;
        TAPS: Typedefs.sfixed0downto_17_list_t(0 to 63);
        acc: Typedefs.sfixed1downto_23_list_t(0 to 63);
        \out\: sfixed(0 downto -17);
    end record;

    type self_t is record
        DELAY: integer;
        TAPS: Typedefs.sfixed0downto_17_list_t(0 to 63);
        acc: Typedefs.sfixed1downto_23_list_t(0 to 63);
        \out\: sfixed(0 downto -17);
        \next\: next_t;
    end record;
    type FIR_2_self_t_list_t is array (natural range <>) of FIR_2.self_t;

    procedure main(self:inout self_t; x: sfixed(0 downto -17); ret_0:out sfixed(0 downto -17));

    -- internal pyha functions
    function FIR(acc: Typedefs.sfixed1downto_23_list_t(0 to 63); \out\: sfixed(0 downto -17)) return self_t;
    procedure pyha_update_registers(self:inout self_t);
    procedure pyha_reset(self:inout self_t);
    procedure pyha_init_next(self:inout self_t);
    procedure pyha_reset_constants(self:inout self_t);
    procedure pyha_deepcopy(self:inout self_t; other: in self_t);
    procedure pyha_list_deepcopy(self:inout FIR_2_self_t_list_t; other: in FIR_2_self_t_list_t);
end package;

package body FIR_2 is
    procedure main(self:inout self_t; x: sfixed(0 downto -17); ret_0:out sfixed(0 downto -17)) is
    -- Transposed FIR structure
        variable i: integer;
    begin
        self.\next\.acc(0) := resize(x * self.TAPS(self.TAPS'length-1), 1, -23, fixed_wrap, fixed_truncate);
        for i in 1 to (self.acc'length) - 1 loop
            self.\next\.acc(i) := resize(self.acc(i - 1) + x * self.TAPS(self.TAPS'length - 1 - i), 1, -23, fixed_wrap, fixed_truncate);

        end loop;
        self.\next\.\out\ := resize(self.acc(self.acc'length-1), 0, -17, fixed_saturate, fixed_truncate);
        ret_0 := self.\out\;
        return;
    end procedure;

    function FIR(acc: Typedefs.sfixed1downto_23_list_t(0 to 63); \out\: sfixed(0 downto -17)) return self_t is
        -- limited constructor
        variable self: self_t;
    begin
        pyha_reset_constants(self);
        self.acc := acc;
        self.\out\ := \out\;
        return self;
    end function;

    procedure pyha_reset(self:inout self_t) is
        -- executed on reset signal. Reset values are determined from initial values of Python variables.
    begin
        self.\next\.DELAY := 2;
        self.\next\.TAPS := (Sfix(7.62939453125e-06, 0, -17), Sfix(0.000152587890625, 0, -17), Sfix(7.62939453125e-06, 0, -17), Sfix(-0.00032806396484375, 0, -17), Sfix(-9.1552734375e-05, 0, -17), Sfix(0.00064849853515625, 0, -17), Sfix(0.00031280517578125, 0, -17), Sfix(-0.0011138916015625, 0, -17), Sfix(-0.0007781982421875, 0, -17), Sfix(0.00171661376953125, 0, -17), Sfix(0.001617431640625, 0, -17), Sfix(-0.002410888671875, 0, -17), Sfix(-0.00298309326171875, 0, -17), Sfix(0.0030975341796875, 0, -17), Sfix(0.0050506591796875, 0, -17), Sfix(-0.00360107421875, 0, -17), Sfix(-0.00800323486328125, 0, -17), Sfix(0.003662109375, 0, -17), Sfix(0.01206207275390625, 0, -17), Sfix(-0.0029144287109375, 0, -17), Sfix(-0.0174713134765625, 0, -17), Sfix(0.00083160400390625, 0, -17), Sfix(0.02465057373046875, 0, -17), Sfix(0.00342559814453125, 0, -17), Sfix(-0.034454345703125, 0, -17), Sfix(-0.01151275634765625, 0, -17), Sfix(0.04907989501953125, 0, -17), Sfix(0.02765655517578125, 0, -17), Sfix(-0.0761871337890625, 0, -17), Sfix(-0.0692596435546875, 0, -17), Sfix(0.1654205322265625, 0, -17), Sfix(0.4317626953125, 0, -17), Sfix(0.4317626953125, 0, -17), Sfix(0.1654205322265625, 0, -17), Sfix(-0.0692596435546875, 0, -17), Sfix(-0.0761871337890625, 0, -17), Sfix(0.02765655517578125, 0, -17), Sfix(0.04907989501953125, 0, -17), Sfix(-0.01151275634765625, 0, -17), Sfix(-0.034454345703125, 0, -17), Sfix(0.00342559814453125, 0, -17), Sfix(0.02465057373046875, 0, -17), Sfix(0.00083160400390625, 0, -17), Sfix(-0.0174713134765625, 0, -17), Sfix(-0.0029144287109375, 0, -17), Sfix(0.01206207275390625, 0, -17), Sfix(0.003662109375, 0, -17), Sfix(-0.00800323486328125, 0, -17), Sfix(-0.00360107421875, 0, -17), Sfix(0.0050506591796875, 0, -17), Sfix(0.0030975341796875, 0, -17), Sfix(-0.00298309326171875, 0, -17), Sfix(-0.002410888671875, 0, -17), Sfix(0.001617431640625, 0, -17), Sfix(0.00171661376953125, 0, -17), Sfix(-0.0007781982421875, 0, -17), Sfix(-0.0011138916015625, 0, -17), Sfix(0.00031280517578125, 0, -17), Sfix(0.00064849853515625, 0, -17), Sfix(-9.1552734375e-05, 0, -17), Sfix(-0.00032806396484375, 0, -17), Sfix(7.62939453125e-06, 0, -17), Sfix(0.000152587890625, 0, -17), Sfix(7.62939453125e-06, 0, -17));
        self.\next\.acc := (Sfix(0.0, 1, -23), Sfix(0.0, 1, -23), Sfix(0.0, 1, -23), Sfix(0.0, 1, -23), Sfix(0.0, 1, -23), Sfix(0.0, 1, -23), Sfix(0.0, 1, -23), Sfix(0.0, 1, -23), Sfix(0.0, 1, -23), Sfix(0.0, 1, -23), Sfix(0.0, 1, -23), Sfix(0.0, 1, -23), Sfix(0.0, 1, -23), Sfix(0.0, 1, -23), Sfix(0.0, 1, -23), Sfix(0.0, 1, -23), Sfix(0.0, 1, -23), Sfix(0.0, 1, -23), Sfix(0.0, 1, -23), Sfix(0.0, 1, -23), Sfix(0.0, 1, -23), Sfix(0.0, 1, -23), Sfix(0.0, 1, -23), Sfix(0.0, 1, -23), Sfix(0.0, 1, -23), Sfix(0.0, 1, -23), Sfix(0.0, 1, -23), Sfix(0.0, 1, -23), Sfix(0.0, 1, -23), Sfix(0.0, 1, -23), Sfix(0.0, 1, -23), Sfix(0.0, 1, -23), Sfix(0.0, 1, -23), Sfix(0.0, 1, -23), Sfix(0.0, 1, -23), Sfix(0.0, 1, -23), Sfix(0.0, 1, -23), Sfix(0.0, 1, -23), Sfix(0.0, 1, -23), Sfix(0.0, 1, -23), Sfix(0.0, 1, -23), Sfix(0.0, 1, -23), Sfix(0.0, 1, -23), Sfix(0.0, 1, -23), Sfix(0.0, 1, -23), Sfix(0.0, 1, -23), Sfix(0.0, 1, -23), Sfix(0.0, 1, -23), Sfix(0.0, 1, -23), Sfix(0.0, 1, -23), Sfix(0.0, 1, -23), Sfix(0.0, 1, -23), Sfix(0.0, 1, -23), Sfix(0.0, 1, -23), Sfix(0.0, 1, -23), Sfix(0.0, 1, -23), Sfix(0.0, 1, -23), Sfix(0.0, 1, -23), Sfix(0.0, 1, -23), Sfix(0.0, 1, -23), Sfix(0.0, 1, -23), Sfix(0.0, 1, -23), Sfix(0.0, 1, -23), Sfix(0.0, 1, -23));
        self.\next\.\out\ := Sfix(0.0, 0, -17);
        pyha_update_registers(self);
    end procedure;

    procedure pyha_update_registers(self:inout self_t) is
        -- loads 'next' values to registers, executed on clock rising edge
    begin
        self.acc := self.\next\.acc;
        self.\out\ := self.\next\.\out\;
    end procedure;

    procedure pyha_init_next(self:inout self_t) is
        -- sets all .next's to current register values, executed before 'main'. 
        -- thanks to this, '.next' variables are always written before read, so they can never be registers
    begin
        self.\next\.DELAY := self.DELAY;
        self.\next\.TAPS := self.TAPS;
        self.\next\.acc := self.acc;
        self.\next\.\out\ := self.\out\;
    end procedure;

    procedure pyha_reset_constants(self:inout self_t) is
        -- reset CONSTANTS, executed before 'main'. Helps synthesis tools to determine constants.
    begin
        self.DELAY := 2;
        self.TAPS := (Sfix(7.62939453125e-06, 0, -17), Sfix(0.000152587890625, 0, -17), Sfix(7.62939453125e-06, 0, -17), Sfix(-0.00032806396484375, 0, -17), Sfix(-9.1552734375e-05, 0, -17), Sfix(0.00064849853515625, 0, -17), Sfix(0.00031280517578125, 0, -17), Sfix(-0.0011138916015625, 0, -17), Sfix(-0.0007781982421875, 0, -17), Sfix(0.00171661376953125, 0, -17), Sfix(0.001617431640625, 0, -17), Sfix(-0.002410888671875, 0, -17), Sfix(-0.00298309326171875, 0, -17), Sfix(0.0030975341796875, 0, -17), Sfix(0.0050506591796875, 0, -17), Sfix(-0.00360107421875, 0, -17), Sfix(-0.00800323486328125, 0, -17), Sfix(0.003662109375, 0, -17), Sfix(0.01206207275390625, 0, -17), Sfix(-0.0029144287109375, 0, -17), Sfix(-0.0174713134765625, 0, -17), Sfix(0.00083160400390625, 0, -17), Sfix(0.02465057373046875, 0, -17), Sfix(0.00342559814453125, 0, -17), Sfix(-0.034454345703125, 0, -17), Sfix(-0.01151275634765625, 0, -17), Sfix(0.04907989501953125, 0, -17), Sfix(0.02765655517578125, 0, -17), Sfix(-0.0761871337890625, 0, -17), Sfix(-0.0692596435546875, 0, -17), Sfix(0.1654205322265625, 0, -17), Sfix(0.4317626953125, 0, -17), Sfix(0.4317626953125, 0, -17), Sfix(0.1654205322265625, 0, -17), Sfix(-0.0692596435546875, 0, -17), Sfix(-0.0761871337890625, 0, -17), Sfix(0.02765655517578125, 0, -17), Sfix(0.04907989501953125, 0, -17), Sfix(-0.01151275634765625, 0, -17), Sfix(-0.034454345703125, 0, -17), Sfix(0.00342559814453125, 0, -17), Sfix(0.02465057373046875, 0, -17), Sfix(0.00083160400390625, 0, -17), Sfix(-0.0174713134765625, 0, -17), Sfix(-0.0029144287109375, 0, -17), Sfix(0.01206207275390625, 0, -17), Sfix(0.003662109375, 0, -17), Sfix(-0.00800323486328125, 0, -17), Sfix(-0.00360107421875, 0, -17), Sfix(0.0050506591796875, 0, -17), Sfix(0.0030975341796875, 0, -17), Sfix(-0.00298309326171875, 0, -17), Sfix(-0.002410888671875, 0, -17), Sfix(0.001617431640625, 0, -17), Sfix(0.00171661376953125, 0, -17), Sfix(-0.0007781982421875, 0, -17), Sfix(-0.0011138916015625, 0, -17), Sfix(0.00031280517578125, 0, -17), Sfix(0.00064849853515625, 0, -17), Sfix(-9.1552734375e-05, 0, -17), Sfix(-0.00032806396484375, 0, -17), Sfix(7.62939453125e-06, 0, -17), Sfix(0.000152587890625, 0, -17), Sfix(7.62939453125e-06, 0, -17));
    end procedure;

    procedure pyha_deepcopy(self:inout self_t; other: in self_t) is
        -- copy 'other' to 'self.next'. ':=' cannot be used as it would directly copy to 'self'
    begin
        self.\next\.DELAY := other.DELAY;
        self.\next\.TAPS := other.TAPS;
        self.\next\.acc := other.acc;
        self.\next\.\out\ := other.\out\;
    end procedure;

    procedure pyha_list_deepcopy(self:inout FIR_2_self_t_list_t; other: in FIR_2_self_t_list_t) is
        -- run deepcopy for each list element
    begin
        for i in self'range loop
            pyha_deepcopy(self(i), other(i));
        end loop;
    end procedure;

end package body;
